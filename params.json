{"tagline":"Trix for managing Meteor deployment configurations","google":"UA-33060395-1","body":"## What's it for?\r\n\r\nSometimes a new instance of an app needs to be configured before it's useful. This library takes a simple approach to solving that problem. There are two components:\r\n\r\n  1) A smart package that provides a `DeployConfig` key/value store that's backed by Mongo.\r\n  \r\n  2) A command line app that prompts for each unsatisfied value and communicates them back to the deployed app (yes, over DDP!).\r\n\r\n## Installation\r\n\r\n  1) Until there's a better way to install smart packages use [meteorite](http://possibilities.github.com/meteorite/)\r\n\r\n  2) Install `mcfg` using npm\r\n\r\n      npm install -g meteor-deploy-config\r\n\r\n## How do I use it?\r\n\r\nStart by fetching values from the `DeployConfig` key/value store. If the value is already in `DeployConfig` the callback gets called right away:\r\n\r\n    DeployConfig.get('googleSecret', function(secret) {\r\n      Meteor.accounts.google.setSecret(secret);\r\n    });\r\n\r\nAfter you deploy your app run the command line utility and you'll be prompted for any values that your app needs to get from `DeployConfig`. These values will be sent to the server, saved in `DeployConfig` and their callbacks will be invoked:\r\n\r\n    mcfg --hostname cool-domain.com --port 3333\r\n\r\n## Security recommendations\r\n\r\nThis package has no *real* security features of it's own. When you deploy an app that contains calls to `DeployConfig.get()` any `ddp` client can connect to it and set any unsatisfied values but after they are set they cannot be set again. Potentially I'll add authentication but I think for now this security-by-first-come-first-served is good enough for most environments. I recommend:\r\n\r\n  * Do everything over SSL! When you specify port 443 `mcfg` will use the wss:// protocol.\r\n\r\n  * If you need better security than this please help me add it!\r\n\r\n  * For most environments running `mcfg` immediately after you deploy will be Secure Enoughâ„¢\r\n\r\n        meteor deploy cool-app && mcfg -h cool-app.meteor.com -p 443\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Meteor Deploy Config"}